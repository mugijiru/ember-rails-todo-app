name: RSpec

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        ports: ["3306:3306"]
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
        env:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

    steps:
    - uses: actions/checkout@v2

    - name: Use ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: use-chromedriver
      uses: nanasess/setup-chromedriver@master

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: install ember-cli
      run: yarn global add ember-cli

    - name: Setup Rails
      env:
        RAILS_ENV: test
      run: |
        gem install bundler --no-document
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        cp config/.ci.database.yml config/database.yml
        bin/rails db:setup

    - name: Setup Ember.js App
      run: |
        cd ember/todo-app
        yarn

    - name: Setup Code Climate test-reporter
      run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

    - name: CodeClimate prebuild
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
      run: ./cc-test-reporter before-build

    - name: Run RSpec
      env:
        RAILS_ENV: test
        TZ: Asia/Tokyo
        CI: true
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
        DISPLAY: ':99'
      run: |
        bundle exec rspec

    - name: CodeClimate afterbuild
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
      run: ./cc-test-reporter after-build

    - name: Notify slack build result
      uses: homoluctus/slatify@master
      if: always()
      with:
          type: ${{ job.status }}
          job_name: '*RSpec*'
          mention: 'here'
          username: 'GitHub Actions'
          mention_if: 'failure'
          channel: '#develop'
          url: ${{ secrets.SLACK_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
